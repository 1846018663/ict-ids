server.port=8080
#mysql
#测试环境  101.37.147.201  root    Hive.lab123
#mysql  172.16.0.152  ict_ids     !QAZ2wsx
spring.datasource.url=jdbc:mysql://101.37.147.201:3306/ict_ids?useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=Hive.lab123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# redis配置
spring.redis.port=6379
spring.redis.host=118.31.107.53
spring.redis.password=Dxzh1234

#调度算法请求地址
travel.algorithm.url=http://47.111.139.187:5000/algorithm
#取消行程调度算法地址
travel.algorithm.cancels.url=http://47.111.139.187:5000/algorithmC
#加入已有行程调度算法地址
travel.algorithm.add.url=http://47.111.139.187:5000/algorithmA
#快速访问接口
travel.algorithm.response.url=http://47.111.139.187:5000/algorithmD
#获取座位编号
travel.algorithm.seat.url=http://47.111.139.187:5000/seat_allocation

#乘客服务 行程预约成功后的返回地址
passenger.service.callback.url=https://applets.dxzhcl.com/order/updateorder
#乘客服务  运载能力检测接口
passenger.service.capacity.test.url=https://applets.dxzhcl.com/order/orderResult
#乘客服务预警接口
passenger.service.early.warning.push.url=https://applets.dxzhcl.com/message/prealert/publish
#乘客服务预警接口  appId
passenger.service.app_id=dxzh20210408schedule



#============== kafka ===================
# 指定kafka server的地址，集群配多个，中间，逗号隔开
spring.kafka.bootstrap-servers=121.43.140.191:9092


#=============== consumer  =======================
# 指定默认消费者group id --> 由于在kafka中，同一组中的consumer不会读取到同一个消息，依靠groud.id设置组名
spring.kafka.consumer.group-id=testGroup
# smallest和largest才有效，如果smallest重新0开始读取，如果是largest从logfile的offset读取。一般情况下我们都是设置smallest
spring.kafka.consumer.auto-offset-reset=earliest
# enable.auto.commit:true --> 设置自动提交offset
spring.kafka.consumer.enable-auto-commit=true
#如果'enable.auto.commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer